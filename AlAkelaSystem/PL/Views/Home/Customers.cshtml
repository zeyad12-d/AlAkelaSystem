@model IEnumerable<DTO.CustomerDtos.CustomerResponseDto>

@{
    ViewData["Title"] = "العملاء";
}

<div class="card">
    <div class="card-header d-flex justify-content-between align-items-center">
        <h5 class="mb-0">
            <i class="fas fa-users me-2"></i>
            قائمة العملاء
        </h5>
        <a class="btn btn-sm btn-primary" asp-controller="Home" asp-action="Index">
            <i class="fas fa-home me-1"></i>
            الرئيسية
        </a>
    </div>
    <div class="card-body">
        @if (Model == null || !Model.Any())
        {
            <div class="text-center text-muted">
                لا توجد بيانات عملاء لعرضها.
            </div>
        }
        else
        {
            <div class="table-responsive">
                <table class="table table-striped table-hover align-middle" id="customersTable">
                    <thead>
                        <tr>
                            <th>#</th>
                            <th>الاسم</th>
                            <th>رقم الهاتف</th>
                            <th>العنوان</th>
                            <th>إجمالي الطلبات</th>
                            <th class="text-end">إجراءات</th>
                        </tr>
                    </thead>
                    <tbody>
                        @{
                            var index = 1;
                        }
                        @foreach (var customer in Model)
                        {
                            <tr>
                                <td>@index</td>
                                <td>@customer.Name</td>
                                <td>@customer.Phone</td>
                                <td>@customer.Address</td>
                                <td>
                                    <span class="badge bg-info" data-customer-total data-customer-id="@customer.Id">--</span>
                                </td>
                                <td class="text-end">
                                    <div class="btn-group btn-group-sm">
                                        <button class="btn btn-outline-primary" data-edit-btn data-customer-id="@customer.Id" data-customer-name="@customer.Name" data-customer-phone="@customer.Phone" data-customer-address="@customer.Address">
                                            <i class="fas fa-edit"></i>
                                            تعديل
                                        </button>
                                        <button class="btn btn-outline-danger" data-delete-btn data-customer-id="@customer.Id">
                                            <i class="fas fa-trash"></i>
                                            حذف
                                        </button>
                                    </div>
                                </td>
                            </tr>
                            index++;
                        }
                    </tbody>
                </table>
            </div>
        }
    </div>
</div>

<!-- Edit Customer Modal -->
<div class="modal fade" id="editCustomerModal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">تعديل العميل</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body">
                <form id="editCustomerForm">
                    <input type="hidden" id="editCustomerId" />
                    <div class="mb-3">
                        <label class="form-label">الاسم</label>
                        <input type="text" class="form-control" id="editCustomerName" required />
                    </div>
                    <div class="mb-3">
                        <label class="form-label">رقم الهاتف</label>
                        <input type="tel" class="form-control" id="editCustomerPhone" />
                    </div>
                    <div class="mb-3">
                        <label class="form-label">العنوان</label>
                        <textarea class="form-control" id="editCustomerAddress" rows="2"></textarea>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">إلغاء</button>
                <button type="button" class="btn btn-primary" id="saveCustomerBtn">حفظ</button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', () => {
            // Fetch totals for each customer on load
            document.querySelectorAll('[data-customer-total]').forEach(async badge => {
                const customerId = badge.getAttribute('data-customer-id');
                try {
                    const res = await fetch(`/Customer/GetTotal?id=${encodeURIComponent(customerId)}`);
                    const result = await res.json();
                    if (result && result.data) {
                        badge.textContent = Number(result.data.totalAmount).toFixed(2);
                    } else {
                        badge.textContent = '0.00';
                    }
                } catch {
                    badge.textContent = '0.00';
                }
            });

            // Edit button
            const editModalEl = document.getElementById('editCustomerModal');
            const editModal = new bootstrap.Modal(editModalEl);
            document.querySelectorAll('[data-edit-btn]').forEach(btn => {
                btn.addEventListener('click', () => {
                    document.getElementById('editCustomerId').value = btn.getAttribute('data-customer-id');
                    document.getElementById('editCustomerName').value = btn.getAttribute('data-customer-name') || '';
                    document.getElementById('editCustomerPhone').value = btn.getAttribute('data-customer-phone') || '';
                    document.getElementById('editCustomerAddress').value = btn.getAttribute('data-customer-address') || '';
                    editModal.show();
                });
            });

            // Save edit
            document.getElementById('saveCustomerBtn').addEventListener('click', async () => {
                const id = document.getElementById('editCustomerId').value;
                const dto = {
                    id: Number(id),
                    name: document.getElementById('editCustomerName').value,
                    phone: document.getElementById('editCustomerPhone').value,
                    address: document.getElementById('editCustomerAddress').value
                };

                try {
                    const res = await fetch(`/Customer/Edit?id=${encodeURIComponent(id)}`, {
                        method: 'PUT',
                        headers: { 'Content-Type': 'application/json' },
                        body: JSON.stringify(dto)
                    });
                    const result = await res.json();
                    if (result.statusCode === 200) {
                        location.reload();
                    }
                } catch {}
            });

            // Delete button
            document.querySelectorAll('[data-delete-btn]').forEach(btn => {
                btn.addEventListener('click', async () => {
                    const id = btn.getAttribute('data-customer-id');
                    if (!confirm('هل أنت متأكد من حذف هذا العميل؟')) return;
                    try {
                        const res = await fetch(`/Customer/Delete?id=${encodeURIComponent(id)}`, { method: 'DELETE' });
                        const result = await res.json();
                        if (result.statusCode === 200) {
                            location.reload();
                        }
                    } catch {}
                });
            });
        });
    </script>
}


