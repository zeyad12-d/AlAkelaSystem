@using DTO.ProductDtos
@using DTO.CategoryDtos
@{
    ViewData["Title"] = "إدارة المنتجات";
    var products = ViewBag.Products as IEnumerable<ProductResponseDto>;
    var categories = ViewBag.Categories as IEnumerable<CategoryResponseDto>;
}

<div class="row">
    <div class="col-12">
        <div class="card mb-4">
            <div class="card-body">
                <div class="row align-items-center">
                    <div class="col-md-6">
                        <h4 class="mb-0">
                            <i class="fas fa-box me-2 text-primary"></i>
                            إدارة المنتجات
                        </h4>
                    </div>
                    <div class="col-md-6 text-end">
                        <button class="btn btn-success" onclick="showAddProductModal()">
                            <i class="fas fa-plus me-2"></i>
                            إضافة منتج جديد
                        </button>
                    </div>
                </div>
            </div>
        </div>

        <div class="card mb-4">
            <div class="card-body">
                <div class="row">
                    <div class="col-md-5">
                        <div class="input-group">
                            <span class="input-group-text">
                                <i class="fas fa-search"></i>
                            </span>
                            <input type="text" class="form-control" id="searchInput" placeholder="البحث في المنتجات...">
                        </div>
                    </div>
                    <div class="col-md-4">
                        <select class="form-select" id="categoryFilter">
                            <option value="">جميع الفئات</option>
                            @if (categories != null)
                            {
                                foreach (var category in categories)
                                {
                                    <option value="@category.Id">@category.Name</option>
                                }
                            }
                        </select>
                    </div>
                    <div class="col-md-3">
                        <button class="btn btn-outline-secondary w-100" onclick="refreshProducts()">
                            <i class="fas fa-sync-alt me-2"></i>
                            تحديث
                        </button>
                    </div>
                </div>
            </div>
        </div>

        <div class="card">
            <div class="card-header">
                <h5 class="card-title mb-0">
                    <i class="fas fa-list me-2"></i>
                    قائمة المنتجات
                </h5>
            </div>
            <div class="card-body">
                <div class="table-responsive">
                    <table class="table table-striped table-hover">
                        <thead class="table-dark">
                            <tr>
                                <th>الرقم</th>
                                <th>اسم المنتج</th>
                                <th>السعر</th>
                                <th>الكمية</th>
                                <th>الإجراءات</th>
                            </tr>
                        </thead>
                        <tbody id="productsTableBody">
                            @if (products != null)
                            {
                                foreach (var product in products)
                                {
                                    <tr>
                                        <td>@product.Id</td>
                                        <td>
                                            <strong>@product.Name</strong><br />
                                            <small class="text-muted">@product.Description</small>
                                        </td>
                                        <td><span class="text-success fw-bold">@product.Price.ToString("C", new System.Globalization.CultureInfo("ar-SA"))</span></td>
                                        <td><span class="badge bg-info">@product.Stock</span></td>
                                        <td>
                                            <div class="btn-group btn-group-sm">
                                                <button class="btn btn-outline-primary" onclick="viewProduct(@product.Id)"><i class="fas fa-eye"></i></button>
                                                <button class="btn btn-outline-warning" onclick="editProduct(@product.Id)"><i class="fas fa-edit"></i></button>
                                                <button class="btn btn-outline-danger" onclick="deleteProduct(@product.Id, '@product.Name')"><i class="fas fa-trash"></i></button>
                                            </div>
                                        </td>
                                    </tr>
                                }
                            }
                        </tbody>
                    </table>
                </div>

                <nav aria-label="Page navigation" class="mt-3">
                    <ul class="pagination justify-content-center" id="pagination"></ul>
                </nav>
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="productModal" tabindex="-1">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="productModalTitle">إضافة منتج جديد</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body">
                <form id="productForm">
                    <input type="hidden" id="productId">
                    <div class="row">
                        <div class="col-md-6">
                            <div class="mb-3">
                                <label class="form-label">اسم المنتج *</label>
                                <input type="text" class="form-control" id="productName" required>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="mb-3">
                                <label class="form-label">الفئة *</label>
                                <select class="form-select" id="productCategory" required>
                                    <option value="">اختر الفئة</option>
                                    @if (categories != null)
                                    {
                                        foreach (var category in categories)
                                        {
                                            <option value="@category.Id">@category.Name</option>
                                        }
                                    }
                                </select>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-6">
                            <div class="mb-3">
                                <label class="form-label">السعر *</label>
                                <input type="number" class="form-control" id="productPrice" min="0" step="0.01" required>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="mb-3">
                                <label class="form-label">الكمية في المخزن</label>
                                <input type="number" class="form-control" id="productStock" min="0" value="0">
                            </div>
                        </div>
                    </div>
                    <div class="mb-3">
                        <label class="form-label">الوصف</label>
                        <textarea class="form-control" id="productDescription" rows="3"></textarea>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">إلغاء</button>
                <button type="button" class="btn btn-primary" onclick="saveProduct()">حفظ</button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        let currentPage = 1;
        const pageSize = 12;

        function showAddProductModal() {
            document.getElementById('productModalTitle').textContent = 'إضافة منتج جديد';
            document.getElementById('productForm').reset();
            document.getElementById('productId').value = '';
            const modal = new bootstrap.Modal(document.getElementById('productModal'));
            modal.show();
        }

        async function editProduct(productId) {
            try {
                const response = await fetch(`/Product/GetById?id=${productId}`);
                const result = await response.json();
                if (result.statusCode === 200) {
                    const product = result.data;
                    document.getElementById('productModalTitle').textContent = 'تحرير المنتج';
                    document.getElementById('productId').value = product.id;
                    document.getElementById('productName').value = product.name;
                    document.getElementById('productCategory').value = product.categoryId;
                    document.getElementById('productPrice').value = product.price;
                    document.getElementById('productStock').value = product.stock || 0;
                    document.getElementById('productDescription').value = product.description || '';
                    const modal = new bootstrap.Modal(document.getElementById('productModal'));
                    modal.show();
                }
            } catch {}
        }

        async function saveProduct() {
            const productId = document.getElementById('productId').value;
            const productName = document.getElementById('productName').value;
            const categoryId = document.getElementById('productCategory').value;
            const price = document.getElementById('productPrice').value;
            const stock = document.getElementById('productStock').value;
            const description = document.getElementById('productDescription').value;

            if (!productName || !categoryId || !price) { return; }

            const productData = {
                name: productName,
                categoryId: parseInt(categoryId),
                price: parseFloat(price),
                stock: parseInt(stock) || 0,
                description: description
            };

            const url = productId ? `/Product/Edit/${productId}` : '/Product/Create';
            const method = productId ? 'PUT' : 'POST';

            const response = await fetch(url, {
                method: method,
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify(productData)
            });
            const result = await response.json();
            if (result.statusCode === 200 || result.statusCode === 201) {
                bootstrap.Modal.getInstance(document.getElementById('productModal')).hide();
                refreshProducts();
            }
        }

        async function deleteProduct(productId, productName) {
            const response = await fetch(`/Product/Delete/${productId}`, { method: 'DELETE' });
            const apiResult = await response.json();
            if (apiResult.statusCode === 200) { refreshProducts(); }
        }

        function refreshProducts() { location.reload(); }

        document.getElementById('categoryFilter').addEventListener('change', async function () {
            const categoryId = this.value;
            let url = `/Product/GetAll?page=${currentPage}&pageSize=${pageSize}`;
            if (categoryId) { url = `/Product/ByCategory?categoryId=${categoryId}`; }
            const response = await fetch(url);
            const result = await response.json();
            if (result.statusCode === 200) { updateProductsTable(result.data); }
        });

        document.getElementById('searchInput').addEventListener('input', function () {
            const searchTerm = this.value.toLowerCase();
            const rows = document.querySelectorAll('#productsTableBody tr');
            rows.forEach(row => {
                const productName = row.cells[1].textContent.toLowerCase();
                if (productName.includes(searchTerm)) { row.style.display = ''; }
                else { row.style.display = 'none'; }
            });
        });

        function updateProductsTable(products) {
            const tbody = document.getElementById('productsTableBody');
            tbody.innerHTML = '';
            if (!products) return;
            products.forEach(p => {
                const tr = document.createElement('tr');
                tr.innerHTML = `
                    <td>${p.id}</td>
                    <td><strong>${p.name}</strong><br/><small class="text-muted">${p.description || ''}</small></td>
                    <td><span class="text-success fw-bold">${p.price?.toFixed ? p.price.toFixed(2) : p.price}</span></td>
                    <td><span class="badge bg-info">${p.stock}</span></td>
                    <td>
                        <div class="btn-group btn-group-sm">
                            <button class="btn btn-outline-primary" onclick="viewProduct(${p.id})"><i class="fas fa-eye"></i></button>
                            <button class="btn btn-outline-warning" onclick="editProduct(${p.id})"><i class="fas fa-edit"></i></button>
                            <button class="btn btn-outline-danger" onclick="deleteProduct(${p.id}, '${p.name}')"><i class="fas fa-trash"></i></button>
                        </div>
                    </td>`;
                tbody.appendChild(tr);
            });
        }
    </script>
}


